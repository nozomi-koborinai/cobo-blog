name: CD

on:
  push:
    branches:
      - 'main'

jobs:
  # どのサービスをデプロイするかを確認する
  changes:
    name: Changes
    runs-on: ubuntu-latest
    timeout-minutes: 15
    outputs:
      storage: ${{ steps.filter.outputs.storage }}
      firestore: ${{ steps.filter.outputs.firestore }}
      functions: ${{ steps.filter.outputs.functions }}
    steps:
      # ソースコードをチェックアウト
      - name: Check out repository
        uses: actions/checkout@v2

      # 変更を検出する
      - name: Detect changes
        uses: dorny/paths-filter@v2
        id: filter
        with:
          filters: |
            storage:
              - 'storage.*'
            firestore:
              - 'firestore.*'

  # Firebase Storage にデプロイ
  deploy_storage:
    name: Deploy Storage
    needs:
      - changes
    if: ${{ needs.changes.outputs.storage == 'true' }}
    runs-on: ubuntu-latest
    permissions:
      id-token: write
      contents: read
    timeout-minutes: 15
    steps:
      # ソースコードをチェックアウト
      - name: Check out repository
        uses: actions/checkout@v2

      # 認証
      - name: 'Authenticate to Google Cloud'
        uses: 'google-github-actions/auth@v1'
        with:
          workload_identity_provider: ${{ secrets.WORKLOAD_IDENTITY_PROVIDER }}
          service_account: ${{ vars.SERVICE_ACCOUNT_PRINCIPAL }}
          create_credentials_file: true
          export_environment_variables: true

      # Firebase Storage にデプロイ
      - name: Deploy to Storage
        run: |
          npm install -g firebase-tools
          firebase deploy --only storage --project=${{ vars.FIREBASE_PROJECT_ID }}

  # Firebase Firestore にデプロイ
  deploy_firestore:
    name: Deploy Firestore
    needs:
      - changes
    if: ${{ needs.changes.outputs.firestore == 'true' }}
    runs-on: ubuntu-latest
    permissions:
      id-token: write
      contents: read
    timeout-minutes: 15
    steps:
      # ソースコードをチェックアウト
      - name: Check out repository
        uses: actions/checkout@v2

      # 認証
      - name: 'Authenticate to Google Cloud'
        uses: 'google-github-actions/auth@v1'
        with:
          workload_identity_provider: ${{ secrets.WORKLOAD_IDENTITY_PROVIDER }}
          service_account: ${{ vars.SERVICE_ACCOUNT_PRINCIPAL }}
          create_credentials_file: true
          export_environment_variables: true

      # Firebase Firestore にデプロイ
      - name: Deploy to Firestore
        run: |
          npm install -g firebase-tools
          firebase deploy --only firestore --project=${{ vars.FIREBASE_PROJECT_ID }}

  # Firebase Hosting にデプロイ
  deploy_hosting:
    permissions:
      contents: 'read'
      id-token: 'write'

    runs-on: ubuntu-latest
    environment:
      name: 'PROD'

    strategy:
      matrix:
        node-version: [18.x]

    steps:
      - uses: actions/checkout@v3
      - id: 'auth'
        name: 'Authenticate to Google Cloud'
        uses: 'google-github-actions/auth@v1'
        with:
          workload_identity_provider: ${{ secrets.WORKLOAD_IDENTITY_PROVIDER }}
          service_account: ${{ vars.SERVICE_ACCOUNT_PRINCIPAL }}
          create_credentials_file: true
          export_environment_variables: true

      - uses: google-github-actions/setup-gcloud@v1
        with:
          version: '>= 445.0.0'

      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node-version }}

      - name: Install next.js dependencies
        run: npm install

      - name: Install firebase-tools
        run: npm install -g firebase-tools

      - run: firebase use ${{ vars.FIREBASE_PROJECT_ID }}

      - run: firebase experiments:enable webframeworks

      - name: Deploy
        run: firebase deploy -f -P ${{ vars.FIREBASE_PROJECT_ID }} --non-interactive
        env:
          NEXT_PUBLIC_FIREBASE_API_KEY: ${{ secrets.FIREBAE_API_KEY }}
          NEXT_PUBLIC_FIREBASE_AUTH_DOMAIN: ${{ vars.FIREBASE_AUTH_DOMAIN }}
          NEXT_PUBLIC_FIREBASE_PROJECT_ID: ${{ vars.FIREBASE_PROJECT_ID }}
